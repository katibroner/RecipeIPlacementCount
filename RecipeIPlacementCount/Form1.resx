<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAIAEBAAAAEAIABoBAAAJgAAACAgAAABACAAqBAAAI4EAAAoAAAAEAAAACAAAAABACAAAAAAADAE
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA/yi8Jv8mvZL/J72I/ye9iP8nvYj/J72I/ya8Iv8n
        vbH/J72I/ye9iP8nvYj/J72I/ye9iP8ovW0AAAAAAAAAAP8usHr/K6oGAAAAAAAAAAAAAAAAAAAAAAAA
        AAD/La+p/y2ujv8troj/La6I/y2uiP8tr8X/LbAtAAAAAAAAAAD/NaFE/zOhpv8zoab/M6GI/zOhiP8z
        oYj/NZ4i/zKfSP9apWn/t7Tz/7e0//+1s57/M6GQAAAAAAAAAAAAAAAAAAAAAP84k0D/OJNAAAAAAAAA
        AAAAAAAAAAAAAP8A/wH/OZN4/0iPef9jjG//OJSM/zmTLQAAAAAAAAAAAAAAAAAAAAD/QINA/0CDQP+5
        p7D/uqb//7unMQAAAAD/AP8B/0CGfP8/hG7/QYRP/z+Gkf8+gi0AAAAAAAAAAAAAAAAAAAAA/0R4QP9E
        eED/RXhg/0Z4gP9IeCAAAAAA/0N4SP9FeUoAAAAAAAAAAP+AgAL/RXeQAAAAAAAAAAAAAAAAAAAAAP9M
        aED/TGhA/0pqYP9MaoD/TGqA/0xoQP9Laar/S2h9/0tpd/9LaXf/S2l3/0xpvf9OaS4AAAAAAAAAAAAA
        AAD/UFxA/1BcQP9QWmD/UlyA/1JcgP9QXED/UVum/1Fad/9RWnf/UVp3/1Fad/9RWnf/UltqAAAAAAAA
        AAAAAAAA/1hMQP9YTED/WE1g/1hMgP9YTID/WEyA/1hMgP9YTID/WE1g/1VNHv9VTTz/VU0eAAAAAAAA
        AAAAAAAAAAAAAP9cQED/XEBA/109YP9ePoD/Xj6A/14+gP9ePoD/Xj6A/109YP9cQED/Xj6A/1xAQAAA
        AAAAAAAAAAAAAAAAAAD/ZDBA/2QwQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD/ZDBA/2MxiP9k
        Lj0AAAAAAAAAAAAAAAAAAAAA/2kmIv9qI5P/aSJ3/2kid/9pInf/aSJ3/2kid/9pInf/aSJ3/2gilf9p
        I3z/bSQHAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAP//AAD//wAAwQMAAP8DAADBwwAA//cAAPP3AAD7+wAA+XsAAPl/
        AAD4PwAA+DcAAP/3AADv7wAA//8AAP//AAAoAAAAIAAAAEAAAAABACAAAAAAAIAQAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        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
        /h/5//4//f/+P/wAAP//////////////////////
</value>
  </data>
</root>